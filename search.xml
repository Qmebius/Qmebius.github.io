<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[论文学习:《ORB-SLAM2》]]></title>
      <url>/2022/12/01/ORB-SLAM2/</url>
      <content type="html"><![CDATA[<h2 id="文章信息"><a href="#文章信息" class="headerlink" title="文章信息"></a>文章信息</h2><p>题目: 《ORB-SLAM2: an Open-Source SLAM System for Monocular, Stereo and RGB-D Cameras》 </p>
<p>作者: Raúl Mur-Artal and Juan D. Tardós </p>
<p>期刊: IEEE Transactions on Robotics</p>
<h2 id="背景、目的、结论"><a href="#背景、目的、结论" class="headerlink" title="背景、目的、结论"></a>背景、目的、结论</h2><p>背景:虽然基于单目的视觉SLAM是最为经济的方案，但是深度信息不能从单一相机观测到，导致地图的尺度和估计的轨迹是未知的,且系统自引导启动需要多视图生成初始映射。单目SLAM在探索时还存在尺度漂移问题并不能解决纯旋转问题。</p>
<p>目的:使用双目和RGB-D相机解决单目相机存在的问题。</p>
<p>结论:</p>
<ul>
<li>第一个用于单目、立体和RGB-D相机的开源SLAM系统，包括闭环、重新定位和地图重用</li>
<li>基于BA方法与基于ICP和光度和深度误差最小化的最新方法相比具有更高的准确度</li>
<li>通过使用近、远立体点和单目观测，得到的立体结果优于最新的直接双目SLAM</li>
<li>提出了一个轻量化的定位模式，可以在地图被禁用时有效使用地图</li>
</ul>
<p>提出了一个完整的包含单目，双目和RGB-D传感器的SLAM系统。能够在CPU标准下执行重新定位，回环检测和地图重用功能。</p>
<h2 id="结果与讨论"><a href="#结果与讨论" class="headerlink" title="结果与讨论"></a>结果与讨论</h2><p>在三个流行的数据集上进行评估，并与其他方法进行了比较。</p>
<ul>
<li>A. KITTI </li>
</ul>
<p><img src="1.png" alt="图片"></p>
<ul>
<li>B. EuRoC </li>
</ul>
<p><img src="2.png" alt="图片"></p>
<ul>
<li>C. TUM</li>
</ul>
<p><img src="3.png" alt="图片"></p>
<ul>
<li>D. Timing results </li>
</ul>
<p><img src="4.png" alt="图片"></p>
<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><p>ORB-SLAM2具有三个线程:目标跟踪、建图、回环检测整体流程如下图:<br><img src="5.png" alt="图片"></p>
<h3 id="单目-近、远关键点"><a href="#单目-近、远关键点" class="headerlink" title="单目,近、远关键点"></a>单目,近、远关键点</h3><p>ORB-SLAM2将三种相机的输入均处理为单目关键点和双目关键点。其中双目关键点又被分为近点和远点。坐标定义为:$X_s = (u_L,v_L,u_R)$,下标L为左图坐标u为横坐标。 </p>
<p>RGB-D关键点$(u_L,v_L)$计算为双目关键点:</p>
<script type="math/tex; mode=display">
u_R = u_L - \frac{f_xb}{d}</script><p>近、远点的区分:一般将深度小于40倍相机基线的的点称为近点</p>
<h3 id="系统启动"><a href="#系统启动" class="headerlink" title="系统启动"></a>系统启动</h3><p>通过双目/RGB点可从一帧获取深度信息的优势,系统可以以第一帧为关键帧,创建初始映射</p>
<h3 id="BA优化的应用"><a href="#BA优化的应用" class="headerlink" title="BA优化的应用"></a>BA优化的应用</h3><ul>
<li><p>Motion-only BA：优化R、t，最小化匹配点间的重投影误差。$x^i_{(\cdot)}$为单目$x^i_{m} \in \mathbb{R}^2$或者双目$x^i_s \in \mathbb{R}^3$,$X^i$为空间点</p>
<script type="math/tex; mode=display">
\begin{aligned}
  \{R,t\} = \underset{R,t}{argmin}\sum_{i \in \chi}\rho(|x^i_{(\cdot)} - \pi_{(\cdot)}(RX^i + t)|^2_{\sum})
\end{aligned}</script><p>其中$\rho$为鲁棒核函数，投影方程$\pi_{\cdot}$如下:</p>
<script type="math/tex; mode=display">
\begin{aligned}
  \pi_m(\begin{bmatrix}
      X \\ Y \\ Z
  \end{bmatrix}) = \begin{bmatrix}
      \frac{f_xX}{Z} + C_x \\ \frac{f_yY}{Z} + C_y
  \end{bmatrix},\pi_s(\begin{bmatrix}
      X \\ Y \\ Z
  \end{bmatrix}) = \begin{bmatrix}
      \frac{f_xX}{Z} + C_x \\ \frac{f_yY}{Z} + C_y \\ \frac{f_x(X-b)}{Z} + C_x
  \end{bmatrix}
\end{aligned}</script></li>
<li><p>Local BA:优化一些共视关键帧$\kappa_L$,和看到的空间点$P_L$。所有其他关键帧$\kappa_F$对$P_L$的观测值保持固定。$\chi_k$为k关键帧与$P_L$中的点匹配点集合。</p>
<script type="math/tex; mode=display">
\{X^i,R_l,t_l|i \in P_L,l \in \kappa_L\} = \underset{X^i,R_l,t_l}{argmin}\sum_{k \in \kappa_L \cup \kappa_a}\sum_{j \in \chi_k}\rho(E_{kj})</script><script type="math/tex; mode=display">
\begin{aligned}
  \rho(E_{kj}) = |x^j_{(\cdot)} - \pi_{(\cdot)}(R_kX^j +t_k)|^2_{\sum}
\end{aligned}</script></li>
<li><p>Full BA ： 特殊的局部BA，全部的关键帧和空间点均被优化</p>
</li>
</ul>
<h3 id="回环检测和全局BA"><a href="#回环检测和全局BA" class="headerlink" title="回环检测和全局BA"></a>回环检测和全局BA</h3><p>回环检测分为两步分别为:回环的检测验证和位姿图的优化</p>
<p>ORB-SLAM2在位姿图优化后加入了一个全局BA实现最优解</p>
<h3 id="关键帧的插入策略"><a href="#关键帧的插入策略" class="headerlink" title="关键帧的插入策略"></a>关键帧的插入策略</h3><p>ORB-SLAM2保持ORB-SLAM的策略。近、远点的区别引入一个新的插入情况。在有挑战性环境下,当近点数量较少,新的帧可以创建一定量的近点时,系统添加一个新的关键帧。</p>
<h3 id="定位模式"><a href="#定位模式" class="headerlink" title="定位模式"></a>定位模式</h3><p>在映射完的地图进行轻量级的定位。此模式下，追踪和回环检测线程关闭,摄像机跟踪3D匹配点进行重定位。</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[《视觉SLAM十四讲》第三讲笔记]]></title>
      <url>/2022/11/25/page1/</url>
      <content type="html"><![CDATA[<h1 id="三维空间刚体运动"><a href="#三维空间刚体运动" class="headerlink" title="三维空间刚体运动"></a>三维空间刚体运动</h1><h2 id="1-旋转矩阵"><a href="#1-旋转矩阵" class="headerlink" title="1.旋转矩阵"></a>1.旋转矩阵</h2><h3 id="1-1点、向量、坐标系"><a href="#1-1点、向量、坐标系" class="headerlink" title="1.1点、向量、坐标系"></a>1.1点、向量、坐标系</h3><p>三维空间点用$\mathbb{R}^3$表示,对于空间中任意基底$[e_1,e_2,e_3]$有如下表示: </p>
<script type="math/tex; mode=display">\begin{aligned}
    a = [e_1,e_2,e_3]\begin{bmatrix}
        a_1 \\ a_2 \\ a_3
    \end{bmatrix} = e_1a_1 + e_2a_2 + e_3a_3
\end{aligned}</script><p>其中$[a_1,a_2,a_3]^T$为向量a在此基底下的坐标 </p>
<p>向量为两个空间点的连线,具有+,-,内积,外积运算</p>
<ul>
<li>内积<script type="math/tex; mode=display">\begin{aligned}
  a \cdot b = \begin{bmatrix}
      a_1 & a_2 & a_3
  \end{bmatrix}\begin{bmatrix}
      b_1 \\ b_2 \\b_3
  \end{bmatrix} = a^Tb = |a||b|cos<a,b>
\end{aligned}</script></li>
<li>外积 </li>
</ul>
<p>向量大小为$|a||b|sin<a,b>$</p>
<script type="math/tex; mode=display">\begin{aligned}
    a \times b = \begin{Vmatrix}
        e_1 & e_2 & e_3 \\ a_1 &a_2& a_3 \\b_1 & b_2 &b_3 
    \end{Vmatrix} = \begin{bmatrix}
        a_2b_3 - a_3b_2 \\ a_3b_1 - a_1b_3 \\ a_1b_2 - a_2b_1
    \end{bmatrix} = \begin{bmatrix}
        0 & -a_3 & a_2 \\ a_3 & 0 & -a_1 \\ -a_2 & a_1 & 0
    \end{bmatrix}b = a^{\wedge}b
\end{aligned}</script><h3 id="1-2坐标系间欧式变换"><a href="#1-2坐标系间欧式变换" class="headerlink" title="1.2坐标系间欧式变换"></a>1.2坐标系间欧式变换</h3><p>对于空间中的基底$[e_1,e_2,e_3]$旋转到$[e_1^{‘},e_2^{‘},e_3^{‘}]$,根据空间向量不变可以得到任意向量在两基底下的等式关系如下:</p>
<script type="math/tex; mode=display">\begin{aligned}
    [e_1,e_2,e_3] \begin{bmatrix}
        a_1 \\a_2 \\a_3
    \end{bmatrix} = [e_1^{'},e_2^{'},e_3^{'}] \begin{bmatrix}
        a_1^{'} \\ a_2^{'} \\a_3^{'}
    \end{bmatrix}
\end{aligned}</script><p>等式两边同乘$[e_1^T,e_2^T,e_3^T]^T$获得坐标转换关系如下:</p>
<script type="math/tex; mode=display">\begin{aligned}
        \begin{bmatrix}
    e_1^Te_1 & 0 & 0 \\
    0 & e_2^Te_2 & 0 \\        
    0 & 0 & e_3^Te_3
    \end{bmatrix}
    \begin{bmatrix}
        a_1 \\a_2 \\a_3
    \end{bmatrix} = 
    \begin{bmatrix}
    e_1^Te_1^{'} &e_1^Te_2^{'} &e_1^Te_3^{'} \\
    e_2^Te_1^{'} &e_2^Te_2^{'} &e_2^Te_3^{'} \\
    e_3^Te_1^{'} &e_3^Te_2^{'} &e_3^Te_3^{'} \\
    \end{bmatrix}\begin{bmatrix}
a_1^{'} \\ a_2^{'} \\a_3^{'}
\end{bmatrix} \overset{def}{=} Ra^{'}
\end{aligned}</script><p>R定义为旋转矩阵,由于矩阵中每个元素为两个基底的内积(基底为单位向量)即值为两向量余弦值,所以又称为方向余弦矩阵 </p>
<p>可知旋转矩阵为正交矩阵,因此有如下相反变换</p>
<script type="math/tex; mode=display">\begin{aligned}
    a^{'} = R^{-1}a= R^Ta
\end{aligned}</script><ul>
<li>旋转矩阵:行列式为1的正交矩阵</li>
</ul>
<p>同时考虑平移t和旋转R的坐标变换为:</p>
<script type="math/tex; mode=display">\begin{aligned}
     a_1 = R_{12}a_2 + t_{12}
\end{aligned}</script><p>其中$t_{12}$为1到2的向量在坐标系1下的坐标</p>
<h3 id="1-3变换矩阵与齐次坐标"><a href="#1-3变换矩阵与齐次坐标" class="headerlink" title="1.3变换矩阵与齐次坐标"></a>1.3变换矩阵与齐次坐标</h3><p>当刚体经过多次欧式变换时，由于多次变换旋转矩阵不具有叠加性，故引入变换矩阵和齐次坐标。</p>
<script type="math/tex; mode=display">\begin{aligned}
        \begin{bmatrix}
    a^{'} \\ 1 
    \end{bmatrix} = 
    \begin{bmatrix}
    R & t \\ 0 & 1
    \end{bmatrix}
    \begin{bmatrix}
    a \\ 1
    \end{bmatrix}
    \overset{def}{=} T
    \begin{bmatrix}
    a \\ 1
    \end{bmatrix}
\end{aligned}</script><p>我们在三维坐标后添加1得到齐次坐标，矩阵T为变换矩阵。\<br>变换矩阵的逆同样表示一个反向的变换:</p>
<script type="math/tex; mode=display">
    T^{-1} = \begin{bmatrix}
    R^T & -R^Tt \\ 0 & 1
    \end{bmatrix}</script><h3 id="1-4旋转向量和欧拉角"><a href="#1-4旋转向量和欧拉角" class="headerlink" title="1.4旋转向量和欧拉角"></a>1.4旋转向量和欧拉角</h3><p>SO(3)旋转矩阵有9个量，只有3个自由度。SE(3)有16个量，有6个自由度。且都具有约束性(旋转矩阵必须为正交且行列式为一)。</p>
<p>所以希望用一个三维向量表示旋转，一个六维向量表达变换。</p>
<ul>
<li>旋转向量: 用一个旋转轴和一个旋转角刻画。旋转向量方向与旋转轴一致，长度等于旋转角。</li>
</ul>
<p>根据罗格里格斯公式,旋转向量到旋转矩阵转换:</p>
<script type="math/tex; mode=display">\begin{aligned}
    R = cos\theta I + (1 - cos\theta)nn^T + sin\theta n^{\wedge}
\end{aligned}</script><p>旋转矩阵到旋转向量:</p>
<script type="math/tex; mode=display">\begin{aligned}
\begin{split}
    tr(R) &= cos\theta tr(I) + (1 - cos\theta)tr(nn^T) + sin\theta tr(n^{\wedge}) \\       
        &= 3cos\theta + 1-cos\theta \\
        &= 1 + 2cos\theta
    \end{split}
\end{aligned}</script><script type="math/tex; mode=display">
\begin{aligned} 
    \theta = arccos\frac{tr(R)-1}{2}
\end{aligned}</script><p>对于旋转轴，旋转后不发生改变:<br>\begin{equation}<br>    Rn = n<br>\end{equation}<br>所以转轴为旋转矩阵R特征值为一的特征向量</p>
<ul>
<li>欧拉角<br>用三个分离的转角直观的描述旋转。</li>
<li>绕Z轴旋转,得到偏航角Yaw</li>
<li>绕Y轴旋转,得到俯仰角Pitch</li>
<li>绕X轴旋转,得到滚转角Roll </li>
</ul>
<p>缺点:万向锁问题。</p>
<h3 id="1-4四元数"><a href="#1-4四元数" class="headerlink" title="1.4四元数"></a>1.4四元数</h3><ul>
<li>四元数:紧凑、没有奇异性。一个四元数由一个实部和三个虚部组成。<script type="math/tex; mode=display">
   q = q_0 + q_1i + q_2j + q_3k</script>其中i,j,k为四元数的虚部</li>
</ul>
<p>假设有一个三维点$p = [x,y,z] \in \mathbb{R}^3$,以及一个由单位四元数q指定的旋转。用一个虚四元数表示三维空间点:</p>
<script type="math/tex; mode=display">
\begin{aligned}
    p = [0,x,y,z]^T = [0,v]^T.
\end{aligned}</script><p>相当于把空间中三个轴与四元数三个虚部对应，则有旋转方程:</p>
<script type="math/tex; mode=display">
\begin{aligned}
    p^{'} = qpq^{-1}
\end{aligned}</script><p>定义以下运算:</p>
<script type="math/tex; mode=display">\begin{aligned}
    q^+ = \begin{bmatrix}
    s & -v^T \\ v & sI + v^{\wedge}
    \end{bmatrix},q^{\oplus} = 
    \begin{bmatrix}
    s & -v^T \\ v & sI-v^{\wedge}
    \end{bmatrix}
\end{aligned}</script><p>可以证明得:</p>
<script type="math/tex; mode=display">
q_1q_2 = q_1^+q_2 = q_2^{\oplus}q_1</script><p>所以对于旋转有:</p>
<script type="math/tex; mode=display">
p^{'}= q^{+}q^{-1^{\oplus}}p.</script><p>计算$q^{+}q^{-1^{\oplus}}$得:</p>
<script type="math/tex; mode=display">
    q^{+}q^{-1^{\oplus}} = \begin{bmatrix}
    1 & 0 \\ 0^T & vv^T+s^2I+2sv^{\wedge}+(v^{\wedge})^2
    \end{bmatrix}</script><p>因为p和$p^{‘}$都是虚四元数，所以矩阵右下角即为四元数到旋转矩阵的转换关系。</p>
<script type="math/tex; mode=display">
R =  vv^T+s^2I+2sv^{\wedge}+(v^{\wedge})^2.</script><p>为获得四元数到旋转向量的转换关系，对等式两边求迹得:</p>
<script type="math/tex; mode=display">
    \begin{split}
        tr(R) &= tr(vv^T)+3s^2+2s\cdot 0+tr((v^{\wedge})^2))\\
            &= 4s^2 - 1
    \end{split}</script><p>根据上文公式得:</p>
<script type="math/tex; mode=display">
    \begin{split}
        cos\theta &= 2s^2 -1 = 2cos^{2}\frac{\theta}{2}-1 \\
        \theta &= 2arccos \textit{s}
    \end{split}</script><p>综上四元数到旋转向量的转换公式如下:</p>
<script type="math/tex; mode=display">
\begin{aligned}
\theta &= 2arccosq_0 \\
[n_x,n_y,n_z]^T &= \frac{[q_1,q_2,q_3]^T}{sin\frac{\theta}{2}}
\end{aligned}</script>]]></content>
      
        
    </entry>
    
  
  
</search>
